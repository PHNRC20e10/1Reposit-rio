/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho2;

import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Izabel
 */
public class CompraGUI extends javax.swing.JPanel {

    //armazena temporariamente o produto com o código informado no ato da busca
    private Produto produtoSelecionado;
    private ModelotabelaCompra carrinhoComprasTab;
    private double precoCompra;
    
    
    public CompraGUI() {
        initComponents();
        precoCompra = 0.0;
        meuInitComponents();
    }

    private void meuInitComponents(){
        this.carrinhoComprasTab = new ModelotabelaCompra(this);
        
        //Criar a conexão dos dados (comportamento) do obj da classe com a tabela GUI
        tabelacarrinho.setModel(carrinhoComprasTab);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        codigoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomeTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantidadeTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        precoUnitTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelacarrinho = new javax.swing.JTable();
        removerTxt = new javax.swing.JButton();
        finalizarBtn = new javax.swing.JButton();
        estoqueTxt = new javax.swing.JButton();
        addProdutoBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totalTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Código");

        codigoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoTxtKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Nome");

        nomeTxt.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Quantidade");

        quantidadeTxt.setText("1");
        quantidadeTxt.setEnabled(false);
        quantidadeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantidadeTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeTxtKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Preço Unit.");

        precoUnitTxt.setEnabled(false);

        tabelacarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelacarrinho);

        removerTxt.setText("Remover");
        removerTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerTxtActionPerformed(evt);
            }
        });

        finalizarBtn.setText("Finalizar");
        finalizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarBtnActionPerformed(evt);
            }
        });

        estoqueTxt.setText("Estoque");
        estoqueTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estoqueTxtActionPerformed(evt);
            }
        });

        addProdutoBtn.setText("Add produto");
        addProdutoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProdutoBtnMouseClicked(evt);
            }
        });
        addProdutoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdutoBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Valor Total: R$");

        totalTxt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        totalTxt.setText("0,00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addProdutoBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(codigoTxt)
                                .addComponent(nomeTxt))
                            .addComponent(quantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precoUnitTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(totalTxt))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(finalizarBtn)
                                .addGap(18, 18, 18)
                                .addComponent(removerTxt)
                                .addGap(18, 18, 18)
                                .addComponent(estoqueTxt)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(precoUnitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addProdutoBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(totalTxt)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(finalizarBtn)
                                    .addComponent(removerTxt)
                                    .addComponent(estoqueTxt))))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void codigoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoTxtKeyTyped
       
        
        //Se a tecla pressionada foi o ENTER
        if(evt.getKeyChar() == '\n'){
        
        
        //Avaliando se existe informação no campo do código
        if(!codigoTxt.getText().isEmpty()){
            try{
            //avaliando se o dado informado é sumérico
            int cod = Integer.parseInt(codigoTxt.getText());
            
            
            //Efetuamos a busca do produto com o código informado na GUI
            produtoSelecionado = FakeBancoDados.consultaProdutoCod(cod);
            
            
            //Avaliamos se existe produto com o código informado
            if(produtoSelecionado != null){
                
                //Atualizamos os campos com dados do produto
                nomeTxt.setText(produtoSelecionado.getNome());
                precoUnitTxt.setText(produtoSelecionado.getPreco()+"");
                quantidadeTxt.setEnabled(true);
                       
                
            }else{
                //não cadastrado
                JOptionPane.showMessageDialog(null, "Produto não cadastrado", "Código", JOptionPane.INFORMATION_MESSAGE);
            }
            
            
            
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "O código deve ser um valor numérico", "erro no código" , 
                        JOptionPane.WARNING_MESSAGE);
            }
        }
        
        }
    }//GEN-LAST:event_codigoTxtKeyTyped

    private void quantidadeTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTxtKeyPressed
        //Quando pressiona a tecla por mais tempo
    }//GEN-LAST:event_quantidadeTxtKeyPressed

    private void quantidadeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTxtKeyReleased
            
        //o operador do caixa vai informar uma nova quantidade
        //calcular o preco parcial desses produtos(lote)
        
        if(!quantidadeTxt.getText().isEmpty()){
            try{
            int quantidade = Integer.parseInt(quantidadeTxt.getText());
            
            double parc = produtoSelecionado.getPreco() * quantidade;
            precoUnitTxt.setText(String.format("%.2f", parc));
            }catch(NumberFormatException ex){
                precoUnitTxt.setText("N/A");
            }
            
        }else{
            //campo da quantidade sem informação
            precoUnitTxt.setText("N/A");
        }
    }//GEN-LAST:event_quantidadeTxtKeyReleased

    private void addProdutoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProdutoBtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addProdutoBtnMouseClicked

    private void addProdutoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdutoBtnActionPerformed
        
        if(produtoSelecionado != null && !precoUnitTxt.getText().equals("N/A")){
            //produto está apto a ser adicionado na tabela
            
            int quantidade = Integer.parseInt(quantidadeTxt.getText());
            if(quantidade <= produtoSelecionado.getQuantidade()){
                
                Produto vendido = new Produto(produtoSelecionado.getCodigo(),produtoSelecionado.getNome(),
                        produtoSelecionado.getPreco(), quantidade);
                
                    //produtoSelecionado.setQuantidade(produtoSelecionado.getQuantidade()- quantidade);
                    
                    //Atualizando o valor da compra do cliente
                    precoCompra += produtoSelecionado.getPreco()* quantidade;
                    totalTxt.setText(String.format("%.2f", precoCompra));
                    
                    //Limpando as informações para a informação de um novo produto
                    codigoTxt.setText("");
                    quantidadeTxt.setText("1");
                    precoUnitTxt.setText("");
                    produtoSelecionado = null;
                    quantidadeTxt.setEnabled(false);
                    nomeTxt.setText("");
                    
                   
                    
                    //adicionar o produto vendido à tabela (carrinho)
                    this.carrinhoComprasTab.addNovoProduto(vendido);
                    tabelacarrinho.updateUI();
                
            }else{
              //não temos a quantidade suficiente para concretizar a venda  
              
              JOptionPane.showMessageDialog(null, "Não há quantidade suficiente para realizar a venda deste produto", 
                      "Quantidade insuf.",JOptionPane.INFORMATION_MESSAGE);
              
            }
            
        }else{
            //produto que não existe ou que a quantidade não condiz com o padrão esperado
            
            JOptionPane.showMessageDialog(null, "A quantidade de produtos informados deve ser um valor numérico", 
                      "Entrada de quantidade inválida",JOptionPane.WARNING_MESSAGE);
        }
        
        
         
    }//GEN-LAST:event_addProdutoBtnActionPerformed

    private void estoqueTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estoqueTxtActionPerformed
     
    }//GEN-LAST:event_estoqueTxtActionPerformed

    private void removerTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerTxtActionPerformed
         int linha = tabelacarrinho.getSelectedRow();
        
        if(linha> -1){
            
 
            //posso remover o produto
            int op = JOptionPane.showConfirmDialog(null, "Desejo remover o produto selecionado",
                    "Confirmação de exclusão", JOptionPane.YES_NO_OPTION);
            if(op == JOptionPane.YES_OPTION){
                //remover produto e atulizar quantidades
                
                String senha = JOptionPane.showInputDialog(null, "Informe a senha do gerente",
                    "Operação restrita", JOptionPane.INFORMATION_MESSAGE);
                
                if(senha != null && senha.equals("ifmg")){
                    
                    carrinhoComprasTab.removeProdutoCarrinho(linha);
                    atualizaQuantidade();
                
                }
               
            }
            
        }else{
            //produto não foi selecionado
            JOptionPane.showMessageDialog(null, "Primeiro é preciso selecionar algum produto",
                    "Selecionar!!!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_removerTxtActionPerformed

    
    private boolean verificaQuantidades(){
        Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
        
        for(int i = 0; i< produtos.size(); i++ ){
            Produto estoque = FakeBancoDados.consultaProdutoCod(produtos.get(i).getCodigo());
            if(produtos.get(i).getQuantidade() > estoque.getQuantidade()){
                JOptionPane.showMessageDialog(null, "A quantidade do produto: " +estoque.getNome()+ 
                        " não é suficiente para realizar a venda","Quantidade insuficiente", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        
                return true;
    }
    
    
    private void finalizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarBtnActionPerformed
        
        //Verificar se temos as quantidades dos produtos que estão sendo vendidos
        if(verificaQuantidades() == true){
            // atualizar o banco de dados FAKE (Memória RAM)
            Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
            
            for(int i =0; i < produtos.size();i++){
                Produto estoque = FakeBancoDados.consultaProdutoCod(produtos.get(i).getCodigo());
                estoque.setQuantidade(estoque.getQuantidade() - produtos.get(i).getQuantidade());

            }

            //zerando o valor total para a próxima compra
        precoCompra = 0.0;
        totalTxt.setText("0.0");
        
        //remover os produtos do carrinho de compra (da compra finalizada)
        carrinhoComprasTab.limpaCarrinho();
        tabelacarrinho.updateUI();
        }
        
        
    }//GEN-LAST:event_finalizarBtnActionPerformed

    public void atualizaQuantidade(){
        //atualiza informações da tabela
        tabelacarrinho.updateUI();
        
        
        //Atualiza o valor da compra com os produtos do carrinho
        double preco = carrinhoComprasTab.calculaPrecoParcialCompra();
        
        totalTxt.setText(String.format("%.2f", preco));
        
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdutoBtn;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JButton estoqueTxt;
    private javax.swing.JButton finalizarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeTxt;
    private javax.swing.JTextField precoUnitTxt;
    private javax.swing.JTextField quantidadeTxt;
    private javax.swing.JButton removerTxt;
    private javax.swing.JTable tabelacarrinho;
    private javax.swing.JLabel totalTxt;
    // End of variables declaration//GEN-END:variables
}
